# yamllint disable rule:line-length
# yamllint disable rule:truthy
---
name: job-container development release workflow

on:
  workflow_call:

    secrets:
      OP_SERVICE_ACCOUNT_TOKEN:
        description: 1password vault services account token
        required: false

    inputs:

      working-directory:
        description: Set working directory. Default is ./.
        required: false
        type: string
        default: "."

      registry:
        description: dtr compatible registry
        required: false
        type: string
        default: docker.io

      registry-login:
        description: registry username
        required: false
        type: string
        default: $DOCKER_LOGIN

      registry-password:
        description: registry password
        required: false
        type: string
        default: $DOCKER_PASSWORD

      opencontainer-labels:
        description: repalce date and sha placeholders with build infor
        required: false
        type: string
        default: ""

      path:
        description: Path to the directory containing your Dockerfile and build context
        required: false
        type: string
        default: .

      image:
        description: Name of image
        required: true
        type: string

      tag:
        description: Value for tag
        required: false
        type: string
        default: dev.${GITHUB_SHA:0:7}

      tag-annotation:
        description: Additional tag configuration
        required: false
        type: string
        default: ""

      extra-build-args:
        description: >
          Extra flags to pass to docker build. For examples, see
          https://docs.docker.com/engine/reference/commandline/build
        required: false
        type: string
        default: ""

      op-version:
        description: Install 1password-cli version
        required: false
        type: string
        default: ""

      teller-version:
        description: Install Teller version
        required: false
        type: string
        default: ""

      vault-version:
        description: Install Vault version
        required: false
        type: string
        default: ""

      snyk-scan:
        description: Perform snyk scan
        required: false
        type: string
        default: false

      snyk-version:
        description: Install Snyk version
        required: false
        type: string
        default: ""

      snyk-severity-threshold:
        description: snyk test reporting threshold
        required: false
        type: string
        default: low

      snyk-token:
        description: snyk api-token
        required: false
        type: string
        default: $SNYK_TOKEN

      snyk-organization:
        description: Name of snyk organization
        required: false
        type: string
        default: ""

      snyk-skip-base-image:
        description: optionally, skip performing cve scan of base image
        required: false
        type: string
        default: "false"

      snyk-additional-args:
        description: additional custom command line flags
        required: false
        type: string
        default: ""

      bats-test:
        description: Run bats against container
        required: false
        type: string
        default: false

      bats-version:
        description: Install Vault version
        required: false
        type: string
        default: ""

      bats-run-container-name:
        description: name for running container
        required: false
        type: string
        default: container-test

      bats-entry-point:
        description: name of shell ( bash | ash | etc )
        required: false
        type: string
        default: /bin/bash

      bats-test-path:
        description: Name of folder with bats tests
        required: false
        type: string
        default: test

      hadolint-version:
        description: Install Vault version
        required: false
        type: string
        default: ""

      dockerfile:
        description: Name of dockerfile
        required: false
        type: string
        default: "Dockerfile"

      hadolint-additional-args:
        description: additional custom command line flags
        required: false
        type: string
        default: ""

      trivy-scan:
        description: Perform trivy scan
        required: false
        type: string
        default: false

      trivy-version:
        description: Install Vault version
        required: false
        type: string
        default: ""

      trivy-severity:
        description: trivy scan reporting threshold
        required: false
        type: string
        default: "LOW,MEDIUM,HIGH,CRITICAL"

      trivy-additional-args:
        description: additional custom command line flags
        required: false
        type: string
        default: ""

      grype-scan:
        description: Perform grype scan
        required: false
        type: string
        default: false

      grype-version:
        description: Install Vault version
        required: false
        type: string
        default: ""

      grype-severity:
        description: grype scan reporting threshold
        required: false
        type: string
        default: "medium"

      grype-additional-args:
        description: additional custom command line flags
        required: false
        type: string
        default: ""

      before-static-analysis:
        description: Optionally call ./.github/actions/before-static-analysis before performing static analysis
        required: false
        type: string
        default: "false"

      before-build:
        description: Optionally call ./.github/actions/before-build before docker build
        required: false
        type: string
        default: "false"

      after-build:
        description: Optionally call ./.github/actions/ater-build after docker build
        required: false
        type: string
        default: "false"

jobs:

  job-container-dev-release:
    name: job-container development release workflow
    runs-on: ubuntu-latest

    env:
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

    steps:
      - name: checkout code
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b         # v4.1.5

      - name: gha-tools-action/install
        uses: ThoughtWorks-DPS/gha-tools-action/install@main
        with:
          op-version: ${{ inputs.op-version }}
          teller-version: ${{ inputs.teller-version }}
          vault-version: ${{ inputs.vault-version }}
          snyk-version: ${{ inputs.snyk-version }}
          bats-version: ${{ inputs.bats-version }}
          hadolint-version: ${{ inputs.hadolint-version }}
          trivy-version: ${{ inputs.trivy-version }}
          grype-version: ${{ inputs.grype-version }}
          cosign-version: ${{ inputs.cosign-version }}
          syft-version: ${{ inputs.syft-version }}
          oras-version: ${{ inputs.oras-version }}

      - name: run custom before-static-analysis action
        if: ${{ inputs.before-static-analysis == 'true' }}
        uses: ./.github/actions/before-static-analysis

      - name: mask
        shell: bash
        run: |
          echo $DOCKER_LOGIN
          echo "::add-mask::$DOCKER_LOGIN"

      - name: gha-tools-action/hadolint
        uses: ThoughtWorks-DPS/gha-tools-action/hadolint@main
        with:
          working-directory: ${{ inputs.working-directory }}
          dockerfile: ${{ inputs.dockerfile }}
          hadolint-additional-args: ${{ inputs.hadolint-additional-args }}

      - name: confirm registry credentials and access
        uses: ThoughtWorks-DPS/gha-tools-action/confirm-registry@main
        with:
          registry: ${{ inputs.registry }}
          registry-login: ${{ inputs.registry-login }}
          registry-password: ${{ inputs.registry-password }}

      - name: run custom before-build scripts
        if: ${{ inputs.before-build == 'true' }}
        uses: ./.github/actions/before-build

      - name: set org.opencontainer creation date and version labels
        uses: ThoughtWorks-DPS/gha-tools-action/set-labels@main
        with:
          working-directory: ${{ inputs.working-directory }}
          dockerfile: ${{ inputs.dockerfile }}

      - name: build gha container image
        uses: ThoughtWorks-DPS/gha-tools-action/build@main
        with:
          working-directory: ${{ inputs.working-directory }}
          registry: ${{ inputs.registry}}
          dockerfile: ${{ inputs.dockerfile }}
          path: ${{ inputs.path }}
          image: ${{ inputs.image }}
          tags: ${{ inputs.tag }}
          extra-build-args: ${{ inputs.extra-build-args }}

      - name: Perform snyk cve scan
        if: ${{ inputs.snyk-scan == 'true' }}
        uses: ThoughtWorks-DPS/gha-tools-action/snyk-scan@main
        with:
          working-directory: ${{ inputs.working-directory }}
          registry: ${{ inputs.registry}}
          dockerfile: ${{ inputs.dockerfile }}
          path: ${{ inputs.path }}
          image: ${{ inputs.image }}
          tags: ${{ inputs.tag }}
          snyk-severity-threshold: ${{ inputs.snyk-severity-threshold }}
          snyk-organization: ${{ inputs.snyk-organization }}
          snyk-token: ${{ inputs.snyk-token }}
          snyk-skip-base-image: ${{ inputs.snyk-skip-base-image }}
          snyk-additional-args: ${{ inputs.snyk-additional-args }}

      - name: Perform trivy image scan
        if: ${{ inputs.trivy-scan == 'true' }}
        uses: ThoughtWorks-DPS/gha-tools-action/trivy-scan@main
        with:
          working-directory: ${{ inputs.working-directory }}
          registry: ${{ inputs.registry}}
          dockerfile: ${{ inputs.dockerfile }}
          path: ${{ inputs.path }}
          image: ${{ inputs.image }}
          tags: ${{ inputs.tag }}
          trivy-severity: ${{ inputs.trivy-severity }}
          trivy-additional-args: ${{ inputs.trivy-additional-args }}

      - name: Perform grype image scan
        if: ${{ inputs.grype-scan == 'true' }}
        uses: ThoughtWorks-DPS/gha-tools-action/grype-scan@main
        with:
          working-directory: ${{ inputs.working-directory }}
          registry: ${{ inputs.registry}}
          dockerfile: ${{ inputs.dockerfile }}
          path: ${{ inputs.path }}
          image: ${{ inputs.image }}
          tags: ${{ inputs.tag }}
          grype-severity: ${{ inputs.grype-severity }}
          grype-additional-args: ${{ inputs.grype-additional-args }}

      - name: Run bats test against running container
        if: ${{ inputs.bats-test == 'true' }}
        uses: ThoughtWorks-DPS/gha-tools-action/bats-test@main
        with:
          working-directory: ${{ inputs.working-directory }}
          registry: ${{ inputs.registry}}
          dockerfile: ${{ inputs.dockerfile }}
          path: ${{ inputs.path }}
          image: ${{ inputs.image }}
          tags: ${{ inputs.tag }}
          bats-run-container-name: ${{ inputs.bats-run-container-name }}
          bats-entry-point: ${{ inputs.bats-entry-point }}
          bats-test-path: ${{ inputs.bats-test-path }}

      - name: run custom after-build scripts
        if: ${{ inputs.after-build == 'true' }}
        uses: ./.github/actions/after-build
        with:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ inputs.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: push image to container registry
        uses: ThoughtWorks-DPS/gha-tools-action/push@main
        with:
          working-directory: ${{ inputs.working-directory }}
          registry: ${{ inputs.registry}}
          image: ${{ inputs.image }}
          tags: ${{ inputs.tag }}
          tag-annotation: ${{ inputs.tag-annotation }}
